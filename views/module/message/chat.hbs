<script>
	if (sessionStorage.getItem('token') == null) {
		window.location.href = Dia_chi_Dich_vu + '/login';
	}
</script>

<head>

	{{!-- IMPORT MESSAGE CSS --}}
	<link rel="stylesheet" href="/message/css/style.css">
	{{!-- // IMPORT MESSAGE CSS --}}


	<link rel="stylesheet" href="/css/chat.css">

	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
		integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
	{{!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script> --}}
	<link rel="stylesheet" type="text/css"
		href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">
	<script type="text/javascript"
		src="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.js"></script>



	{{!-- //template chat --}}
</head>

<body style="padding: 0; background-color: ">

	<div class="container-fluid h-100">
		<div class="row justify-content-center h-100">
			<div class="col-md-4 col-xl-3 chat">
				<div class="card mb-sm-3 mb-md-0 contacts_card">
					<div class="card-header">
						<div class="input-group">
							<input type="text" placeholder="Search..." name="" class="form-control search">
							<div class="input-group-prepend">
								<span class="input-group-text search_btn"><i class="fa fa-search"></i></span>
							</div>
						</div>
					</div>
					<div class="card-body contacts_body">
						<ui class="contacts" id="listMessagesId">

							<li class="active">
								<div class="d-flex bd-highlight">
									<div class="img_cont">
										<img src="/images/user_icon.png" class="rounded-circle user_img">
										<span class="online_icon"></span>
									</div>
									<div class="user_info">
										<span>Maryam Naz</span>
										<p>Maryam is online</p>
									</div>
								</div>
							</li>

						</ui>
					</div>
					<div class="card-footer"></div>
				</div>
			</div>
			<div class="col-md-8 col-xl-6 chat" id="contactRightId">

				<div class="card">
					<div class="card-body msg_card_body">
						<img src="/images/user_icon.png" alt="">
					</div>
				</div>

			</div>
		</div>
</body>

<script src="/js/moment.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
	moment.locale('vi');
	//const socket = io(Dia_chi_Dich_vu);

	var messageId = `{{messageId}}`
	var token = sessionStorage.getItem('token');
	var user = decodedJWT(token);

	if (messageId == ``) {
		showListMessages();
	} else {
		showListMessages(showDetailMessage);
	}

	function showListMessages(callback) {
		// listMessagesId.innerHTML = ``;
		getAllMessageUserAPI(token, user.id)
			.then(listMessages => {
				//console.log(listMessages);
				listMessagesId.innerHTML = ``;

				if (listMessages.count > 0) {
					let name = ``;
					let avatar = ``;

					listMessages.messages.map(message => {
						if (user.id == message.userSell._id) {
							name = message.userBuy.name == undefined ? message.userBuy.phoneNumber : message.userBuy.name;
							avatar = message.userBuy.avatar == undefined ? 'images/user_icon.png' : message.userBuy.avatar;
						} else {
							name = message.userSell.name == undefined ? message.userSell.phoneNumber : message.userSell.name;
							avatar = message.userSell.avatar == undefined ? 'images/user_icon.png' : message.userSell.avatar;
						}

						//console.log(user);
						//console.log(message);

						listMessagesId.innerHTML += `
							<a href="/message/${message._id}">
								<li class="${messageId == message.id ? 'active' : ''}" style="cursor: pointer">
									<div class="d-flex bd-highlight">
										<div class="img_cont">
											<img src="${Dia_chi_Dich_vu}/${avatar}"
											class="rounded-circle user_img">
											<span class="{{!-- online_icon --}} ${message._id}"></span>
										</div>
										<div class="user_info">
											<span>${name}</span>
											<p>${message.moment}</p>
											<span>${shortString(message.post.title, 28)}</span>
										</div>
									</div>
								</li>
							</a>`
					});

					if (messageId != ``) {
						callback(listMessages);
					}
				}
			})
			.catch(err => {
				console.log(err);
			});

	}

	function keyCode(event) {
		if (event.keyCode == 13) {
			sendMessage();
		}
	}

	function sendMessage() {
		let contentMessage = contentMessageId.value.replace('\n', '');
		if (contentMessage != '') {
			let userAndContentMessage = {
				messageId: messageId,
				messageChat: contentMessage,
				user: user.id
			}
			socket.emit('client-send-message', userAndContentMessage);
		}
		contentMessageId.value = ``;
	}

	socket.on('server-response-client-join-room-chat', data => {
		showListContentMessages(data, loadDownMessage);
	});

	socket.on('server-send-message', messageChatAndNameUser => {
		let messageIdServerSendMessage = messageChatAndNameUser.messageId;
		let userId = messageChatAndNameUser.userId;
		let name = messageChatAndNameUser.name;
		let avatar = messageChatAndNameUser.avatar;
		let messageChat = messageChatAndNameUser.messageChat;

		if (messageIdServerSendMessage == messageId) {
			let div = document.createElement('div');

			if (user.id.toString() === userId.toString()) {
				div.classList.add('d-flex');
				div.classList.add('justify-content-end');
				div.classList.add('mb-4');
				div.innerHTML = `
				<div class="msg_cotainer_send">
					${messageChat}
					<span class="msg_time_send">${moment().calendar()}</span>
				</div>
				<div class="img_cont_msg">
					<img src="${Dia_chi_Dich_vu}/${avatar === undefined ? 'images/user_icon.png' : avatar}"
						class="rounded-circle user_img_msg">
				</div>				
				`
			} else {
				div.classList.add('d-flex');
				div.classList.add('justify-content-start');
				div.classList.add('mb-4');
				div.innerHTML = `
				<div class="img_cont_msg">
					<img src="${Dia_chi_Dich_vu}/${avatar === undefined ? 'images/user_icon.png' : avatar}"
						class="rounded-circle user_img_msg">
				</div>
				<div class="msg_cotainer">
					${messageChat}
					<span class="msg_time">${moment().calendar()}</span>
				</div>
				`
			}

			contentDetailMessageId.appendChild(div);
			loadDownMessage();
		}
	});

	async function showDetailMessage(listMessages) {
		contactRightId.innerHTML = ``;
		const messageDetail = listMessages.messages.find(message => message._id == messageId);
		console.log(messageDetail);

		const chuoiHTML = drawBorderDetailChat(messageDetail);

		contactRightId.innerHTML = chuoiHTML;

		socket.emit('client-join-room-chat', { messageId: messageId, userId: user.id });

	}

	async function showListContentMessages(data, callback) {
		let listContentMessages = [];
		data.messageLeft.map(message => listContentMessages.push(message));
		data.messageRight.map(message => listContentMessages.push(message));

		listContentMessages.sort((x, y) => {
			return new Date(x.time) - new Date(y.time);
		});

		listContentMessages.map(message => {
			console.log(message);
			let div = document.createElement('div');
			let index = data.messageLeft.findIndex(messageLeft => messageLeft._id === message._id);
			if (index == -1) {
				div.classList.add('d-flex');
				div.classList.add('justify-content-end');
				div.classList.add('mb-4');
				div.innerHTML = `
				<div class="msg_cotainer_send">
					${message.content}
					<span class="msg_time_send" ${message.seen == 1 ? 'style="bottom: -30px;"' : ''}>${moment(message.time).calendar()} <br>${message.seen == 1 ? 'Đã xem' : ''}</span>
				</div>
				<div class="img_cont_msg">
					<img src="${Dia_chi_Dich_vu}/${data.avatarRight === undefined ? 'images/user_icon.png' : data.avatarRight}"
						class="rounded-circle user_img_msg">
				</div>				
				`
			} else {
				div.classList.add('d-flex');
				div.classList.add('justify-content-start');
				div.classList.add('mb-4');
				div.innerHTML = `
				<div class="img_cont_msg">
					<img src="${Dia_chi_Dich_vu}/${data.avatarLeft === undefined ? 'images/user_icon.png' : data.avatarLeft}"
						class="rounded-circle user_img_msg">
				</div>
				<div class="msg_cotainer">
					${message.content}
					<span class="msg_time">${moment(message.time).calendar()} </span>
				</div>
				`
			}

			contentDetailMessageId.appendChild(div);
		});
		callback();
	}

	function authFailed() {
		sessionStorage.removeItem('token');
		window.location = Dia_chi_Dich_vu;
	}

	function showToggle() {
		$(document).ready(function () {
			$('.action_menu').toggle();
		});
	}

	function loadDownMessage() {
		$('#contentDetailMessageId').stop().animate({
			scrollTop: $('#contentDetailMessageId')[0].scrollHeight + 10000
		}, 800);
	}

	function drawBorderDetailChat(messageDetail) {
		const chuoiHTML = `
				<div class="card">
					<div class="card-header msg_head">
						<div class="d-flex bd-highlight">
							<div class="img_cont">
									<img src="${Dia_chi_Dich_vu}/${messageDetail.post.images[0]}"
									class="rounded-circle user_img">
							</div>
							<div class="user_info">
								<span>${messageDetail.post.title}</span>
								<p style="font-size: 1rem; color: red">${Tao_Chuoi_The_hien_So_nguyen_duong(messageDetail.post.price)} ₫</p>
							</div>
							<div class="video_cam">
								<span><i class="fa fa-video"></i></span>
								<span><i class="fa fa-phone"></i></span>
							</div>
						</div>
						<span id="action_menu_btn" onclick="showToggle()" ><i class="fa fa-ellipsis-v"></i></span>
						<div class="action_menu">
							<ul>
								<li><i class="fa fa-user-circle"></i> Xem thông tin</li>
								<li><i class="fa fa-ban"></i> Chặn người này</li>
							</ul>
						</div>
					</div>

					<div class="card-body msg_card_body" id="contentDetailMessageId">

					</div>
					<div id="typingId">
						
					</div>

					<div class="card-footer">
						<div class="input-group">
							<textarea id="contentMessageId" onkeyup="keyCode(event)" onkeydown="userTyping(event)" class="form-control type_msg"
								placeholder="Type your message..."></textarea>
							<div class="input-group-append">
								<span class="input-group-text send_btn" onclick="sendMessage()" ><i class="fa fa-paper-plane-o"></i></span>
							</div>
						</div>
					</div>
				</div>`;
		return chuoiHTML;
	}

	socket.on('someone-typing', data => {
		if (user.id != data.userIdTyping && messageId == data.messageIdTyping) {
			typingId.innerHTML = `<img src="${Dia_chi_Dich_vu}/${data.avatarUserTyping == undefined ? '/images/user_icon.png' : data.avatarUserTyping}" height="40" width="40"><img src="/images/typing.gif">`
			typingId.style.padding = '1.25rem'
			loadDownMessage();
		}
	});

	socket.on('someone-pause-typing', data => {
		if (user.id != data.userIdPauseTyping && messageId == data.messageIdPauseTyping) {
			typingId.innerHTML = '';
			typingId.style.padding = '0'
			loadDownMessage();
		}
	});

	var timeOutTyping;
	function userTyping(event) {
		if (event.keyCode != 13) {
			let data = {
				avatar: user.avatar,
				name: user.name,
				userId: user.id,
				messageId: messageId
			}
			socket.emit("user-typing", data);

			clearTimeout(timeOutTyping);
			timeOutTyping = setTimeout(() => {
				socket.emit("user-pause-typing", data);
			}, 1500);
		}
	}

	socket.on('online', data => {
		let messageId = data.messageId;
		let userId = data.userId;

		if (user.id != userId) {
			let span = document.getElementsByClassName(messageId);
			span[0].classList.add('online_icon');
			socket.emit('response-online', { userId: user.id, messageId: messageId });
		}
	});

	socket.on('client-send-response-online', async data => {
		setTimeout(() => {
			let messageId = data.messageId;
			let userId = data.userId;

			if (user.id != userId) {
				let span = document.getElementsByClassName(messageId);
				console.log(span)
				span[0].classList.add('online_icon');
			}
		}, 100)
	});

	socket.on('offline', data => {
		let messageId = data.messageId;
		let userId = data.userId;

		if (user.id != userId) {
			let span = document.getElementsByClassName(messageId);
			span[0].classList.remove('online_icon');
		}
	})

</script>